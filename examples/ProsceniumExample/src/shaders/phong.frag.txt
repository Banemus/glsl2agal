uniform vec3 AmbientColor;
uniform vec3 DiffuseColor;
uniform vec3 SpecularColor;
uniform float SpecularExponent;

varying vec3 LightVec;
varying vec3 SurfaceNormal;
varying vec3 ReflectedLightVec;
varying vec3 ViewVec;

void main()
{
    vec3 surfaceNormal     = normalize(SurfaceNormal);
    vec3 lightVec          = normalize(LightVec);
    vec3 viewVec           = normalize(ViewVec);
    vec3 reflectedLightVec = normalize(ReflectedLightVec);

    // Ambient
    vec3 color = AmbientColor;

    // Diffuse
    color += DiffuseColor * max(0, dot(lightVec, surfaceNormal));

    // Specular
    color += SpecularColor * pow(max(0, dot(reflectedLightVec, viewVec)), SpecularExponent);

    gl_FragColor = vec4(color, 1.0);
}